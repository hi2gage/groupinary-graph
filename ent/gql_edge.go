// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (d *Definition) Word(ctx context.Context) (*Word, error) {
	result, err := d.Edges.WordOrErr()
	if IsNotLoaded(err) {
		result, err = d.QueryWord().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (w *Word) Definitions(ctx context.Context) (result []*Definition, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = w.NamedDefinitions(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = w.Edges.DefinitionsOrErr()
	}
	if IsNotLoaded(err) {
		result, err = w.QueryDefinitions().All(ctx)
	}
	return result, err
}
