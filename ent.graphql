directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateDefinitionInput is used for create Definition object.
Input was generated by ent.
"""
input CreateDefinitionInput {
  description: String!
  wordID: ID
}
"""
CreateGroupInput is used for create Group object.
Input was generated by ent.
"""
input CreateGroupInput {
  description: String!
}
"""
CreateWordConnectionsInput is used for create WordConnections object.
Input was generated by ent.
"""
input CreateWordConnectionsInput {
  description: String!
}
"""
CreateWordInput is used for create Word object.
Input was generated by ent.
"""
input CreateWordInput {
  description: String!
  definitionIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Definition implements Node {
  id: ID!
  description: String!
  word: Word
}
"""Ordering options for Definition connections"""
input DefinitionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Definitions."""
  field: DefinitionOrderField!
}
"""Properties by which Definition connections can be ordered."""
enum DefinitionOrderField {
  ALPHA
}
type Group implements Node {
  id: ID!
  description: String!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "shrektionary_api/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  definitions: [Definition!]!
  groups: [Group!]!
  words: [Word!]!
  wordConnectionsSlice(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int
  ): WordConnectionsConnection!
}
"""
UpdateDefinitionInput is used for update Definition object.
Input was generated by ent.
"""
input UpdateDefinitionInput {
  description: String
  wordID: ID
  clearWord: Boolean
}
type Word implements Node {
  id: ID!
  description: String!
  definitions: [Definition!]
}
type WordConnections implements Node {
  id: ID!
  description: String!
}
"""A connection to a list of items."""
type WordConnectionsConnection {
  """A list of edges."""
  edges: [WordConnectionsEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type WordConnectionsEdge {
  """The item at the end of the edge."""
  node: WordConnections
  """A cursor for use in pagination."""
  cursor: Cursor!
}
