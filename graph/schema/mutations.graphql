type Mutation {
    # Group
    createGroup(name: String!): Group!
    updateGroupName(id: ID!, name: String!): Group!


    # Delete
    deleteGroup(id: ID!): Boolean!
    deleteWord(id: ID!): Boolean!
    deleteDefinition(id: ID!): Boolean!
}

extend type Mutation {
    updateUserName(firstName: String!, lastName: String): User!
}

extend type Mutation {
    addParentWord(parentWord: String!, parentDefinition: String): Word!

    "AddChildWord Testing documentation"
    addChildWord(
        parentIds: [ID!], 
        childWord: String!, 
        childDefinition: String
        ): Word!

    addDefinition(wordID: ID!, definition: String!): Definition!
    connectWords(parentId: ID!, childId: ID!): Word!
}

extend type Mutation {
    updateWord(id: ID!, wordDescription: String!): Word!
    updateDefinition(id: ID!, definitionDescription: String!): Definition!
}